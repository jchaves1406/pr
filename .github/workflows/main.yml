# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'      
         
      - name: create virtualenv and activate virtualenv
        run: |
          pip install virtualenv
          virtualenv -p=python3.9 env
          source env/bin/activate
          pwd
         
      - name: Instalacion de dependencias necesarias en Python
        run: |
          pip install -r requeriments.txt
          
      - name: Instalacion de dependencias necesarias para pyvirtualdisplay
        run: |
          sudo apt-get install -y xvfb
          sudo apt-get install -y x11-utils
          sudo apt-get install -y xfonts-100dpi xfonts-75dpi xfonts-scalable xfonts-cyrillic
          
      - name: Instalacion de Google Chrome y chromedriver
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo rm google-chrome-stable_current_amd64.deb
          wget https://chromedriver.storage.googleapis.com/110.0.5481.77/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          google-chrome --version
          
      - name: Permisos chromedriver
        run: |
          sudo chown root:root chromedriver
          sudo chmod +x chromedriver
          
      - name: Verificación de sintaxis y estilo del código adecuado en Python
        run: |
          flake8 web_sc_functions.py
          flake8 test_web_sc.py
        
      - name: Pruebas unitarias 
        run: |
          pytest
        
      - name: Configure aws credentials                  
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
          
      - name: test aws cli
        run: aws s3api list-buckets           
        
      - name: Ejecucion de la aplicación
        run: |
          pip install zappa
          source env/bin/activate   
          pip install beautifulsoup4
          pip install selenium
          pip install pyvirtualdisplay
          pip install pandas
          pip install boto3
          pip install xvfbwrapper
          pip install xvfbwrapper
          sudo apt install python3-xvfbwrapper 
          
          sudo apt-get update
          sudo apt-get install xvfb
          pwd
          ls
          
          which Xvfb
          
          zappa deploy dev
          zappa invoke lambda_html.lambda_handler
          ls

          
